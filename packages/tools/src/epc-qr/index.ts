import { isValidIBAN, electronicFormatIBAN } from 'ibantools'

const SERVICE_TAG = 'BCD'
const VERSION = '002'
const CHARACTER_SET = 1
const IDENTIFICATION_CODE = 'SCT'

type PurposeCode =
  | 'BKDF'
  | 'BKFE'
  | 'BKFM'
  | 'BKIP'
  | 'BKPP'
  | 'CBLK'
  | 'CDCB'
  | 'CDCD'
  | 'CDCS'
  | 'CDDP'
  | 'CDOC'
  | 'CDQC'
  | 'ETUP'
  | 'FCOL'
  | 'MTUP'
  | 'ACCT'
  | 'CASH'
  | 'COLL'
  | 'CSDB'
  | 'DEPT'
  | 'INTC'
  | 'INTP'
  | 'LIMA'
  | 'NETT'
  | 'BFWD'
  | 'CCIR'
  | 'CCPC'
  | 'CCPM'
  | 'CCSM'
  | 'CRDS'
  | 'CRPR'
  | 'CRSP'
  | 'CRTL'
  | 'EQPT'
  | 'EQUS'
  | 'EXPT'
  | 'EXTD'
  | 'FIXI'
  | 'FWBC'
  | 'FWCC'
  | 'FWSB'
  | 'FWSC'
  | 'MARG'
  | 'MBSB'
  | 'MBSC'
  | 'MGCC'
  | 'MGSC'
  | 'OCCC'
  | 'OPBC'
  | 'OPCC'
  | 'OPSB'
  | 'OPSC'
  | 'OPTN'
  | 'OTCD'
  | 'REPO'
  | 'RPBC'
  | 'RPCC'
  | 'RPSB'
  | 'RPSC'
  | 'RVPO'
  | 'SBSC'
  | 'SCIE'
  | 'SCIR'
  | 'SCRP'
  | 'SHBC'
  | 'SHCC'
  | 'SHSL'
  | 'SLEB'
  | 'SLOA'
  | 'SWBC'
  | 'SWCC'
  | 'SWPT'
  | 'SWSB'
  | 'SWSC'
  | 'TBAS'
  | 'TBBC'
  | 'TBCC'
  | 'TRCP'
  | 'AGRT'
  | 'AREN'
  | 'BEXP'
  | 'BOCE'
  | 'COMC'
  | 'CPYR'
  | 'GDDS'
  | 'GDSV'
  | 'GSCB'
  | 'LICF'
  | 'MP2B'
  | 'POPE'
  | 'ROYA'
  | 'SCVE'
  | 'SERV'
  | 'SUBS'
  | 'SUPP'
  | 'TRAD'
  | 'CHAR'
  | 'COMT'
  | 'MP2P'
  | 'ECPG'
  | 'ECPR'
  | 'ECPU'
  | 'EPAY'
  | 'CLPR'
  | 'COMP'
  | 'DBTC'
  | 'GOVI'
  | 'HLRP'
  | 'HLST'
  | 'INPC'
  | 'INPR'
  | 'INSC'
  | 'INSU'
  | 'INTE'
  | 'LBRI'
  | 'LIFI'
  | 'LOAN'
  | 'LOAR'
  | 'PENO'
  | 'PPTI'
  | 'RELG'
  | 'RINP'
  | 'TRFD'
  | 'FORW'
  | 'FXNT'
  | 'ADMG'
  | 'ADVA'
  | 'BCDM'
  | 'BCFG'
  | 'BLDM'
  | 'BNET'
  | 'CBFF'
  | 'CBFR'
  | 'CCRD'
  | 'CDBL'
  | 'CFEE'
  | 'CGDD'
  | 'CORT'
  | 'COST'
  | 'CPKC'
  | 'DCRD'
  | 'DSMT'
  | 'DVPM'
  | 'EDUC'
  | 'FACT'
  | 'FAND'
  | 'FCPM'
  | 'FEES'
  | 'GIFT'
  | 'GOVT'
  | 'ICCP'
  | 'IDCP'
  | 'IHRP'
  | 'INSM'
  | 'IVPT'
  | 'MCDM'
  | 'MCFG'
  | 'MSVC'
  | 'NOWS'
  | 'OCDM'
  | 'OCFG'
  | 'OFEE'
  | 'OTHR'
  | 'PADD'
  | 'PTSP'
  | 'RCKE'
  | 'RCPT'
  | 'REBT'
  | 'REFU'
  | 'RENT'
  | 'REOD'
  | 'RIMB'
  | 'RPNT'
  | 'RRBN'
  | 'RRCT'
  | 'RRTP'
  | 'RVPM'
  | 'SLPI'
  | 'SPLT'
  | 'STDY'
  | 'TBAN'
  | 'TBIL'
  | 'TCSC'
  | 'TELI'
  | 'TMPG'
  | 'TPRI'
  | 'TPRP'
  | 'TRNC'
  | 'TRVC'
  | 'WEBI'
  | 'IPAY'
  | 'IPCA'
  | 'IPDO'
  | 'IPEA'
  | 'IPEC'
  | 'IPEW'
  | 'IPPS'
  | 'IPRT'
  | 'IPU2'
  | 'IPUW'
  | 'ANNI'
  | 'CAFI'
  | 'CFDI'
  | 'CMDT'
  | 'DERI'
  | 'DIVD'
  | 'FREX'
  | 'HEDG'
  | 'INVS'
  | 'PRME'
  | 'SAVG'
  | 'SECU'
  | 'SEPI'
  | 'TREA'
  | 'UNIT'
  | 'FNET'
  | 'FUTR'
  | 'ANTS'
  | 'CVCF'
  | 'DMEQ'
  | 'DNTS'
  | 'HLTC'
  | 'HLTI'
  | 'HSPC'
  | 'ICRF'
  | 'LTCF'
  | 'MAFC'
  | 'MARF'
  | 'MDCS'
  | 'VIEW'
  | 'CDEP'
  | 'SWFP'
  | 'SWPP'
  | 'SWRS'
  | 'SWUF'
  | 'ADCS'
  | 'AEMP'
  | 'ALLW'
  | 'ALMY'
  | 'BBSC'
  | 'BECH'
  | 'BENE'
  | 'BONU'
  | 'CCHD'
  | 'COMM'
  | 'CSLP'
  | 'GFRP'
  | 'GVEA'
  | 'GVEB'
  | 'GVEC'
  | 'GVED'
  | 'GWLT'
  | 'HREC'
  | 'PAYR'
  | 'PEFC'
  | 'PENS'
  | 'PRCP'
  | 'RHBS'
  | 'SALA'
  | 'SPSP'
  | 'SSBE'
  | 'LBIN'
  | 'LCOL'
  | 'LFEE'
  | 'LMEQ'
  | 'LMFI'
  | 'LMRK'
  | 'LREB'
  | 'LREV'
  | 'LSFL'
  | 'ESTX'
  | 'FWLV'
  | 'GSTX'
  | 'HSTX'
  | 'INTX'
  | 'NITX'
  | 'PTXP'
  | 'RDTX'
  | 'TAXS'
  | 'VATX'
  | 'WHLD'
  | 'TAXR'
  | 'B112'
  | 'BR12'
  | 'TLRF'
  | 'TLRR'
  | 'AIRB'
  | 'BUSB'
  | 'FERB'
  | 'RLWY'
  | 'TRPT'
  | 'CBTV'
  | 'ELEC'
  | 'ENRG'
  | 'GASB'
  | 'NWCH'
  | 'NWCM'
  | 'OTLC'
  | 'PHON'
  | 'UBIL'
  | 'WTER'
  | 'BOND'
  | 'CABD'
  | 'CAEQ'
  | 'CBCR'
  | 'DBCR'
  | 'DICL'
  | 'EQTS'
  | 'FLCR'
  | 'EFTC'
  | 'EFTD'
  | 'MOMA'
  | 'RAPI'
  | 'GAMB'
  | 'LOTT'
  | 'AMEX'
  | 'SASW'
  | 'AUCO'
  | 'PCOM'
  | 'PDEP'
  | 'PLDS'
  | 'PLRF'
  | 'GAFA'
  | 'GAHO'
  | 'CPEN'
  | 'DEPD'
  | 'RETL'
  | 'DEBT'

export const generateEpcQrCodeData = ({
  name,
  bic,
  iban,
  amount,
  currency = 'EUR',
  purposeCode,
  structuredReference,
  unstructuredReference,
  information
}: {
  name: string
  bic: string
  iban: string
  amount: number
  currency: 'EUR' | 'USD'
  purposeCode?: PurposeCode
  structuredReference?: string
  unstructuredReference?: string
  information?: string
}) => {
  if (name.length > 70) throw new Error('Name must have <= 70 characters.')

  if (bic) {
    if (bic.length > 11) throw new Error('BIC must have <= 11 characters.')
  }

  if (!isValidIBAN(iban)) throw new Error('IBAN is not valid.')

  if (amount < 1 || amount > 99999999999)
    throw new Error('Amount is not valid.')

  if (purposeCode) {
    if (purposeCode.length > 4)
      throw new Error('Purpose code must have <= 4 characters.')
  }

  if (structuredReference) {
    if (structuredReference.length > 35)
      throw new Error('Structured reference must have <= 35 characters.')
  }

  if (unstructuredReference) {
    if (unstructuredReference.length > 140)
      throw new Error('Unstructured reference must have <= 140 characters.')
  }
  if (!structuredReference && !unstructuredReference)
    throw new Error(
      'Either structured or unstructured reference must be defined'
    )

  if (information) {
    if (information.length > 70)
      throw new Error('Information must have <= 70 characters.')
  }

  return [
    SERVICE_TAG,
    VERSION,
    CHARACTER_SET,
    IDENTIFICATION_CODE,
    bic,
    name,
    electronicFormatIBAN(iban),
    currency + (amount / 100).toFixed(2),
    purposeCode || '',
    structuredReference || '',
    unstructuredReference || '',
    information || ''
  ].join('\n')
}
